{"@id":"core/fosuser-bundle.jsonld","@context":"http://schema.org","@type":"CreativeWork","name":"FOSUser Bundle Integration","text":"\u003ch1\u003eFOSUser Bundle Integration\u003c/h1\u003e\n\n\u003cp\u003eAPI Platform Core is shipped with a bridge for \u003ca href=\"https://github.com/FriendsOfSymfony/FOSUserBundle\"\u003eFOSUserBundle\u003c/a\u003e. If\nthe FOSUser bundle is enabled, this bridge will use its \u003ccode\u003eUserManager\u003c/code\u003e to create, update and delete user resources.\u003c/p\u003e\n\n\u003ch2\u003eInstalling the Bundle\u003c/h2\u003e\n\n\u003cp\u003eThe installation procedure of the FOSUserBundle is described \u003ca href=\"https://symfony.com/doc/master/bundles/FOSUserBundle/index.html\"\u003ein the main Symfony docs\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eYou can:\n- Skip the \u003ca href=\"https://symfony.com/doc/master/bundles/FOSUserBundle/index.html#step-3-create-your-user-class\"\u003estep 3 (Create your User class)\u003c/a\u003e\nand use the class provided in the next paragraph to set up serialization groups the correct way\n- Skip the \u003ca href=\"https://symfony.com/doc/master/bundles/FOSUserBundle/index.html#step-4-configure-your-application-s-security-yml\"\u003estep 4 (Configure your application’s security.yml)\u003c/a\u003e\nif you are planning to \u003ca href=\"jwt.jsonld\"\u003euse a JWT-based authentication using \u003ccode\u003eLexikJWTAuthenticationBundle\u003c/code\u003e\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eIf you are using the API Platform Standard Edition, you will need to enable the form services in the symfony framework\nconfiguration options:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"language-yaml\"\u003e# app/config/config.yml\nframework:\n    form: { enabled: true }\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eEnabling the Bridge\u003c/h2\u003e\n\n\u003cp\u003eTo enable the provided bridge with FOSUserBundle, you need to add the following configuration to api-platform:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"language-yaml\"\u003e# app/config/config.yml\napi_platform:\n    enable_fos_user: true\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eCreating a \u003ccode\u003eUser\u003c/code\u003e Entity with Serialization Groups\u003c/h2\u003e\n\n\u003cp\u003eHere’s an example of declaration of a \u003ca href=\"https://github.com/FriendsOfSymfony/FOSUserBundle/blob/master/Resources/doc/index.rst#a-doctrine-orm-user-class\"\u003eDoctrine ORM User class\u003c/a\u003e.\nYou need to use serialization groups to hide some properties like \u003ccode\u003eplainPassword\u003c/code\u003e (only in read) and \u003ccode\u003epassword\u003c/code\u003e. The properties\nshown are handled with the \u003ca href=\"serialization-groups-and-relations.jsonld#normalization\"\u003e\u003ccode\u003enormalization_context\u003c/code\u003e\u003c/a\u003e, while the properties\nyou can modify are handled with \u003ca href=\"serialization-groups-and-relations.jsonld#denormalization\"\u003e\u003ccode\u003edenormalization_context\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eCreate your User entity with serialization groups:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"language-php\"\u003e\u0026lt;?php\n\n// src/AppBundle/Entity/User.php\n\nnamespace AppBundle\\Entity;\n\nuse ApiPlatform\\Core\\Annotation\\ApiResource;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse FOS\\UserBundle\\Model\\User as BaseUser;\nuse FOS\\UserBundle\\Model\\UserInterface;\nuse Symfony\\Component\\Serializer\\Annotation\\Groups;\n\n/**\n * @ORM\\Entity\n * @ApiResource(attributes={\n *     \u0026#34;normalization_context\u0026#34;={\u0026#34;groups\u0026#34;={\u0026#34;user\u0026#34;, \u0026#34;user-read\u0026#34;}},\n *     \u0026#34;denormalization_context\u0026#34;={\u0026#34;groups\u0026#34;={\u0026#34;user\u0026#34;, \u0026#34;user-write\u0026#34;}}\n * })\n */\nclass User extends BaseUser\n{\n    /**\n     * @ORM\\Id\n     * @ORM\\Column(type=\u0026#34;integer\u0026#34;)\n     * @ORM\\GeneratedValue(strategy=\u0026#34;AUTO\u0026#34;)\n     */\n    protected $id;\n\n    /**\n     * @Groups({\u0026#34;user\u0026#34;})\n     */\n    protected $email;\n\n    /**\n     * @ORM\\Column(type=\u0026#34;string\u0026#34;, length=255, nullable=true)\n     * @Groups({\u0026#34;user\u0026#34;})\n     */\n    protected $fullname;\n\n    /**\n     * @Groups({\u0026#34;user-write\u0026#34;})\n     */\n    protected $plainPassword;\n\n    /**\n     * @Groups({\u0026#34;user\u0026#34;})\n     */\n    protected $username;\n\n    public function setFullname($fullname)\n    {\n        $this-\u0026gt;fullname = $fullname;\n\n        return $this;\n    }\n    public function getFullname()\n    {\n        return $this-\u0026gt;fullname;\n    }\n\n    public function isUser(UserInterface $user = null)\n    {\n        return $user instanceof self \u0026amp;\u0026amp; $user-\u0026gt;id === $this-\u0026gt;id;\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ePrevious chapter: \u003ca href=\"form-data.jsonld\"\u003eAccept application/x-www-form-urlencoded Form Data\u003c/a\u003e\u003c/p\u003e\n\n\u003cp\u003eNext chapter: \u003ca href=\"jwt.jsonld\"\u003eAdding a JWT authentication using \u003ccode\u003eLexikJWTAuthenticationBundle\u003c/code\u003e\u003c/a\u003e\u003c/p\u003e\n","author":[{"@type":"Person","name":"Rémi Piotaix","email":"piotaixr@users.noreply.github.com"},{"@type":"Person","name":"Steve Hall","email":"sh41@users.noreply.github.com"},{"@type":"Person","name":"Amrouche Hamza","email":"laharl.moon@gmail.com"},{"@type":"Person","name":"Prou Yann","email":"yann@les-tilleuls.coop"},{"@type":"Person","name":"Ener-Getick","email":"egetick@gmail.com"},{"@type":"Person","name":"Kevin Saliou","email":"kevin@saliou.name"},{"@type":"Person","name":"Kévin Dunglas","email":"dunglas@gmail.com"},{"@type":"Person","name":"hamza","email":"hamza@oblady.fr"}],"dateCreated":"2016-03-30T22:29:36+02:00","dateModified":"2017-09-11T14:30:19+02:00"}