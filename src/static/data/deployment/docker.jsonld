{"@id":"deployment/docker.jsonld","@context":"http://schema.org","@type":"CreativeWork","name":"Using API Platform with Docker","text":"\u003ch1\u003eUsing API Platform with Docker\u003c/h1\u003e\n\n\u003cp\u003eAPI Platform projects can be run through \u003ca href=\"https://www.docker.com/\"\u003eDocker\u003c/a\u003e.\nA \u003ca href=\"https://docs.docker.com/compose/\"\u003eDocker compose\u003c/a\u003e configuration including a fully working \u003ca href=\"https://en.wikipedia.org/wiki/LAMP_(software_bundle)\"\u003eLAMP\u003c/a\u003e\nstack is shipped with the API Platform distribution.\u003c/p\u003e\n\n\u003ch2\u003eServices\u003c/h2\u003e\n\n\u003cp\u003eThe Docker Compose configuration comes with several ready-use services by default:\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eName\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003cth\u003ePort(s)\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eapp\u003c/td\u003e\n\u003ctd\u003eThe application with PHP and PHP-FPM 7.1, the latest Composer\u003c/td\u003e\n\u003ctd\u003eN/A\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd\u003edb\u003c/td\u003e\n\u003ctd\u003eA database provided by MySQL 5.7\u003c/td\u003e\n\u003ctd\u003eN/A\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd\u003enginx\u003c/td\u003e\n\u003ctd\u003eAn HTTP server provided by Nginx 1.11\u003c/td\u003e\n\u003ctd\u003e8080\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd\u003evarnish\u003c/td\u003e\n\u003ctd\u003eAn HTTP cache provided by Varnish 4.1\u003c/td\u003e\n\u003ctd\u003e80\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eInstallation\u003c/h2\u003e\n\n\u003cp\u003eTo install it, run the following commands (Docker must be installed on your system):\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e$ docker-compose up -d # Download, build and run Docker images\n$ docker-compose exec app bin/console doctrine:schema:create # Create the MySQL schema\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eYour project will be accessible in two different ways:\n* Through the HTTP cache (Varnish): \u003ccode\u003ehttp://localhost\u003c/code\u003e\n* Through the HTTP server directly (Nginx) to facilitate debugging: \u003ccode\u003ehttp://localhost:8080\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ePrevious chapter: \u003ca href=\"heroku.jsonld\"\u003eDeploying an API Platform App on Heroku\u003c/a\u003e\u003c/p\u003e\n","author":[{"@type":"Person","name":"Laury Sorriaux","email":"laury@les-tilleuls.coop"},{"@type":"Person","name":"meyerbaptiste","email":"baptiste@les-tilleuls.coop"},{"@type":"Person","name":"Teoh Han Hui","email":"teohhanhui@gmail.com"},{"@type":"Person","name":"cyril souillard","email":"cyril.souillard@gmail.com"},{"@type":"Person","name":"Amrouche Hamza","email":"hamza@les-tilleuls.coop"},{"@type":"Person","name":"Alexandre Marchais","email":"alexandre.marchais@gmail.com"},{"@type":"Person","name":"Stepan Anchugov","email":"kixxx1@gmail.com"},{"@type":"Person","name":"KÃ©vin Dunglas","email":"dunglas@gmail.com"}],"dateCreated":"2015-09-04T13:21:53+02:00","dateModified":"2017-10-04T10:04:37+02:00"}